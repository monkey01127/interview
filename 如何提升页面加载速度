Web前端性能优化——如何提高页面加载速度

 0、按需加载、预加载
 
 <link rel="prefetch" href="http://www.example.com/">

 一、减少HTTP请求
  CSS Sprites、
  字体图标、
  合并脚本 和样式表、
  将多个样式表或者脚本文件合并到一个文件中，可以减少HTTP请求的数量从而缩短效应时间
  
 二、使用CDN
  CDN可能选择网络阶跃数最小的服务器，或者具有最短响应时间的服务器
  
  DN还可以进行数据备份、扩展存储能力，进行缓存，同时有助于缓和Web流量峰值压力。

    CDN的缺点：

    1、响应时间可能会受到其他网站流量的影响。CDN服务提供商在其所有客户之间共享Web服务器组。

    2、如果CDN服务质量下降了，那么你的工作质量也将下降

    3、无法直接控制组件服务器
  
  三、添加Expires头

    页面的初次访问者会进行很多HTTP请求，但是通过使用一个长久的Expires头，
    可以使这些组件被缓存，下次访问的时候，就可以减少不必要的HTPP请求，从而提高加载速度。

    Expires缺点： 它要求服务器和客户端时钟严格同步；过期日期需要经常检查

    HTTP1.1中引入Cache-Control来克服Expires头的限制，使用max-age指定组件被缓存多久。

    Cache-Control： max-age=12345600

    若同时制定Cache-Control和Expires，则max-age将覆盖Expires头
  
  四、压缩组件
    Accept-Encoding: gzip,deflate
    
  五、将样式表放在头部
    白屏
    
  六、将脚本放在底部
  
  八、使用外部的JavaScript和CSS
  
  九、减少DNS查找
  
    域名解析 --> 发起TCP的3次握手 --> 建立TCP连接后发起http请求 --> 服务器响应http请求，浏览器得到html代码 
    --> 浏览器解析html代码，并请求html代码中的资源（如js、css、图片等） --> 浏览器对页面进行渲染呈现给用户
    
  十一、避免重定向
    301：永久重定向，主要用于当网站的域名发生变更之后，告诉搜索引擎域名已经变更了，应该把旧域名的的数据和链接数转移到新域名下，
    从而不会让网站的排名因域名变更而受到影响。

    302：临时重定向，主要实现post请求后告知浏览器转移到新的URL。

    304：Not Modified，主要用于当浏览器在其缓存中保留了组件的一个副本，同时组件已经过期了，
    这是浏览器就会生成一个条件GET请求，如果服务器的组件并没有修改过，则会返回304状态码，
    同时不携带主体，告知浏览器可以重用这个副本，减少响应大小。
    
 
